<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.project.performance.model.mapper.PerformanceMapper">

	<!-- 장르별 공연 목록 조회 -->
	<select id="genre" resultType="Performance">
	    SELECT MT20ID, PRFNM, PRFPDFROM, PRFPDTO, FCLTYNM, POSTER
	    FROM TB_PERFORMANCES_DETAIL
	    WHERE GENRENM = #{genre}
	</select>
	
	<!-- 장르별 공연 목록 페이징 조회 -->
	<select id="genreWithPaging" resultType="Performance">
	<![CDATA[
	    SELECT *
	    FROM (
	        SELECT /*+ INDEX_DESC(p PK_PERFORMANCES_DETAIL) */
	            p.MT20ID, p.PRFNM, p.PRFPDFROM, p.PRFPDTO, p.FCLTYNM, p.POSTER,
	            ROW_NUMBER() OVER (ORDER BY p.PRFPDFROM DESC) AS RN
	        FROM TB_PERFORMANCES_DETAIL p
	        WHERE p.GENRENM = #{genre}
	    )
	    WHERE RN > #{offset} AND RN <= #{offset} + #{pageSize}
	]]>
	</select>
	
	<!-- 공연 상세페이지 조회 -->
	<select id="detail">
		SELECT MT20ID, POSTER, PRFNM, FCLTYNM, PRFPDFROM, PRFPDTO,  PRFRUNTIME, PRFCAST, PCSEGUIDANCE
		FROM TB_PERFORMANCES_DETAIL
		WHERE MT20ID = #{mt20id}
	</select>
	
	<!-- 공연 위도, 경도 조회 -->
	<select id="selectPerformanceById">
		SELECT FCLTLA, FCLTLO
		FROM TB_VENUE JOIN TB_PERFORMANCES_DETAIL USING(MT10ID)
		WHERE MT20ID = #{mt20id}
	</select>
	
	<!-- 스케줄 및 잔여 좌석 조회 -->
	<select id="getScheduleData" resultType="map">
        SELECT 
		   p.MT20ID,
		   pt.DAY_OF_WEEK,
		   CASE 
		       WHEN pt.DAY_OF_WEEK = 1 THEN '월요일'
		       WHEN pt.DAY_OF_WEEK = 2 THEN '화요일'
		       WHEN pt.DAY_OF_WEEK = 3 THEN '수요일'
		       WHEN pt.DAY_OF_WEEK = 4 THEN '목요일'
		       WHEN pt.DAY_OF_WEEK = 5 THEN '금요일'
		       WHEN pt.DAY_OF_WEEK = 6 THEN '토요일'
		       WHEN pt.DAY_OF_WEEK = 7 THEN '일요일'
		   END AS day_name,
		   pt.PERFORMANCE_TIME as time,
		   COALESCE((
		       SELECT SUM(vsi.SEAT_COUNT)
		       FROM TB_VENUE_SEAT_INFO vsi
		       JOIN TB_PERFORMANCES_DETAIL pd ON vsi.MT10ID = pd.MT10ID
		       WHERE pd.MT20ID = p.MT20ID
		   ), 0) - COUNT(CASE 
		       WHEN ts.SEAT_STATUS = 'booked' 
		       AND ts.SHOW_DATE >= TRUNC(SYSDATE) 
		       THEN 1 
		   END) as seats,
		   'available' as status  
		FROM 
		   TB_PERFORMANCES_DETAIL p
		   INNER JOIN TB_PERFORMANCE_TIME pt ON p.MT20ID = pt.MT20ID
		   LEFT JOIN TB_TICKET_SEAT ts ON (
		       ts.MT20ID = p.MT20ID
		       AND ts.SHOW_TIME = pt.PERFORMANCE_TIME
		       AND ts.SHOW_DATE >= TRUNC(SYSDATE)
		   )
		WHERE 
		   p.MT20ID = #{mt20id}
		   AND pt.DAY_OF_WEEK IS NOT NULL
		GROUP BY 
		   p.MT20ID,
		   pt.DAY_OF_WEEK,
		   pt.PERFORMANCE_TIME
		ORDER BY 
		   pt.DAY_OF_WEEK, 
		   pt.PERFORMANCE_TIME
    </select>
    
    <!-- 주요 공연 소개 -->
    <select id="mainPerform">
    	<![CDATA[
	    	SELECT
				MT20ID,
				POSTER,
				PRFNM
			FROM
				(
					SELECT MT20ID, POSTER, PRFNM
					FROM TB_PERFORMANCES_DETAIL
					ORDER BY
					DBMS_RANDOM.VALUE )
			WHERE
				ROWNUM <= 3
			ORDER BY PRFNM
		]]>
    </select>
    
    
    <!-- 공연 점수 별 순위 10개 -->
    <select id="performanceRanking">
    	<![CDATA[
	    	SELECT *
			FROM (
			    SELECT 
			        MT20ID,
			        PRFNM,
			        POSTER,
			        PRFREVIEW_RANK,
			        REVIEW_COUNT,
			        AVG_RATING
			    FROM 
			        ETFIVE.VW_PERFORMANCE_RANKING
			    ORDER BY 
			        PRFREVIEW_RANK DESC, AVG_RATING DESC
			) 
			WHERE ROWNUM <= 10
		]]>
	</select>
    
    <!-- 리뷰 등록 -->
    <insert id="insertReview">
    	INSERT INTO TB_PERFORMANCE_REVIEW
        VALUES (
        	SEQ_REVIEW_NO.NEXTVAL, 
        	#{reviewContent}, 
        	#{reviewStar}, 
        	DEFAULT,
        	NULL, 
        	DEFAULT, 
        	#{memberNo},
        	#{mt20id}
        )
    </insert>
    
    <!-- 리뷰 중복 여부 확인 -->
    <select id="selectReviewCount">
    	SELECT COUNT(*)
    	FROM TB_PERFORMANCE_REVIEW
    	WHERE MEMBER_NO = #{memberNo}
    	AND MT20ID = #{mt20id}
    </select>
    
    <!-- 리뷰 수정 -->
    <update id="updateReview">
    	UPDATE TB_PERFORMANCE_REVIEW
    	SET REVIEW_CONTENT = #{reviewContent}
    	WHERE REVIEW_NO = #{reviewNo}
    </update>
    
    <!-- 리뷰 삭제 -->
    <delete id="deleteReview">
    	DELETE FROM TB_PERFORMANCE_REVIEW
    	WHERE REVIEW_NO = #{reviewNo}
    	AND MEMBER_NO = #{memberNo}
    </delete>
    
    <!-- 리뷰 목록 조회 -->
    <select id="selectReviewsByPerformanceId">
		SELECT MT20ID, REVIEW_STAR, REVIEW_CONTENT, CREATE_DATE, MEMBER_NO, REVIEW_NO, MEMBER_NICKNAME 
		FROM TB_PERFORMANCE_REVIEW JOIN TB_MEMBER USING(MEMBER_NO)
		WHERE MT20ID = #{mt20id}
    </select>
		
    <!-- 공연관리자가 등록한 공연 목록 조회  -->
    <select id="selectPerformancesByManager">
	    SELECT MT20ID, PRFNM, PRFPDFROM, PRFPDTO, FCLTYNM, POSTER
	    FROM TB_PERFORMANCES_DETAIL
	    WHERE CONCERT_MANAGER_NO = #{memberNo}
    </select>
	
</mapper>