<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.project.statistics.model.mapper.StatisticsBatchMapper">


	<!-- 지난달 통계 데이터 등록(뮤지컬, 연극, 클래식) -->
	<insert id="saveStatistics" parameterType="Statistics">
		INSERT INTO "TB_STATISTICS"
		VALUES(
			SEQ_STAT_NO.NEXTVAL,
			#{statCategory},
			#{statPrfcnt},
			#{statPrfdtcnt},
			#{statNtssnmrssm},
			#{statCancelnmrssm},
			#{statNtssamountsm},
			#{categoryCode},
			DEFAULT,
			#{statStartDate},
            #{statEndDate}
		)	
	</insert>
	
	
	<!-- 지난달 통계 데이터 조회 -->
    <select id="getStatList" resultType="Statistics">
        SELECT 
            STAT_NO, STAT_CATEGORY, STAT_PRFCNT,
            STAT_PRFDTCNT, STAT_NTSSNMRSSM, STAT_CANCELNMRSSM,
            STAT_NTSSAMOUNTSM, CATEGORY_CODE, PROCESS_DATE,
            STAT_START_DATE, STAT_END_DATE
        FROM TB_STATISTICS
        WHERE TRUNC(STAT_START_DATE, 'MM') = TRUNC(ADD_MONTHS(SYSDATE, -1), 'MM')
        ORDER BY STAT_NO DESC
    </select>
    
    
    <!-- 공연 종료 배치 실행 -->
    <update id="updateExpiredPerformances">
    	<![CDATA[
		    UPDATE TB_PERFORMANCES_DETAIL 
		    SET PRFSTATE = '공연종료'
		    WHERE TO_CHAR(TO_DATE(PRFPDTO, 'YYYY-MM-DD'), 'YYYY-MM-DD') < TRUNC(SYSDATE)
		    AND PRFSTATE != '공연종료'
	    ]]>
	</update>
	
	
	<!-- 시작된 공연 상태 업데이트 -->
	<update id="updateStartedPerformances">
		<![CDATA[
		    UPDATE TB_PERFORMANCES_DETAIL 
		    SET PRFSTATE = '공연중'
		    WHERE TO_CHAR(TO_DATE(PRFPDFROM, 'YYYY-MM-DD'), 'YYYY-MM-DD') <= TRUNC(SYSDATE)
		    AND TO_CHAR(TO_DATE(PRFPDTO, 'YYYY-MM-DD'), 'YYYY-MM-DD') >= TRUNC(SYSDATE)
		    AND PRFSTATE = '공연예정'
		]]>
	</update>


	<!-- 공연 리뷰 평점 업데이트 -->
	<update id="updatePerformanceReviewRanks">
	    UPDATE TB_PERFORMANCES_DETAIL pd
	    SET PRFREVIEW_RANK = (
	        SELECT NVL(AVG(pr.REVIEW_STAR), 0)
	        FROM TB_PERFORMANCE_REVIEW pr
	        WHERE pr.MT20ID = pd.MT20ID
	        AND pr.REVIEW_DEL_FL = 'N'
	        GROUP BY pr.MT20ID
	    )
	    WHERE EXISTS (
	        SELECT 1
	        FROM TB_PERFORMANCE_REVIEW pr
	        WHERE pr.MT20ID = pd.MT20ID
	        AND pr.REVIEW_DEL_FL = 'N'
	    )
	</update>

</mapper>